// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TokyoGarden.DAL;

#nullable disable

namespace TokyoGarden.DAL.Migrations
{
    [DbContext(typeof(DbTokyoGarden))]
    [Migration("20250814191930_InitialClean")]
    partial class InitialClean
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlergenyPozycje_Menu", b =>
                {
                    b.Property<int>("alergenyid")
                        .HasColumnType("int");

                    b.Property<int>("pozycje_menuid")
                        .HasColumnType("int");

                    b.HasKey("alergenyid", "pozycje_menuid");

                    b.HasIndex("pozycje_menuid");

                    b.ToTable("AlergenyPozycje_Menu");
                });

            modelBuilder.Entity("TokyoGarden.Model.Adresy", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("miasto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nr_domu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nr_mieszkania")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ulica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Adresy");
                });

            modelBuilder.Entity("TokyoGarden.Model.Alergeny", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nazwa_alergenu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("opis_alergenu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Alergeny");
                });

            modelBuilder.Entity("TokyoGarden.Model.Kategorie_Menu", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nazwa_kategorii")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("KategorieMenu");
                });

            modelBuilder.Entity("TokyoGarden.Model.Pozycje_Menu", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<decimal>("cena")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte[]>("image_data")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("kategoria_menuid")
                        .HasColumnType("int");

                    b.Property<string>("nazwa_pozycji")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("skladniki")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("kategoria_menuid");

                    b.ToTable("PozycjeMenu");
                });

            modelBuilder.Entity("TokyoGarden.Model.Pozycje_Zamowienia", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<decimal>("cena")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ilosc")
                        .HasColumnType("int");

                    b.Property<int?>("pozycja_menuid")
                        .HasColumnType("int");

                    b.Property<int?>("zamowienieid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("pozycja_menuid");

                    b.HasIndex("zamowienieid");

                    b.ToTable("PozycjeZamowienia");
                });

            modelBuilder.Entity("TokyoGarden.Model.Uzytkownicy", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("haslo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nazwa_uzytkownika")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("typ_uzytkownika")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Uzytkownicy");
                });

            modelBuilder.Entity("TokyoGarden.Model.Zamowienia", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("data_zamowienia")
                        .HasColumnType("datetime2");

                    b.Property<string>("dodatkowe_informacje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("laczna_cena")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("metoda_platnosci")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("opcje_zamowienia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status_zamowienia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("uzytkownikid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("uzytkownikid");

                    b.ToTable("Zamowienia");
                });

            modelBuilder.Entity("AlergenyPozycje_Menu", b =>
                {
                    b.HasOne("TokyoGarden.Model.Alergeny", null)
                        .WithMany()
                        .HasForeignKey("alergenyid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TokyoGarden.Model.Pozycje_Menu", null)
                        .WithMany()
                        .HasForeignKey("pozycje_menuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TokyoGarden.Model.Pozycje_Menu", b =>
                {
                    b.HasOne("TokyoGarden.Model.Kategorie_Menu", "kategoria_menu")
                        .WithMany("pozycje_menu")
                        .HasForeignKey("kategoria_menuid");

                    b.Navigation("kategoria_menu");
                });

            modelBuilder.Entity("TokyoGarden.Model.Pozycje_Zamowienia", b =>
                {
                    b.HasOne("TokyoGarden.Model.Pozycje_Menu", "pozycja_menu")
                        .WithMany()
                        .HasForeignKey("pozycja_menuid");

                    b.HasOne("TokyoGarden.Model.Zamowienia", "zamowienie")
                        .WithMany("pozycje_zamowienia")
                        .HasForeignKey("zamowienieid");

                    b.Navigation("pozycja_menu");

                    b.Navigation("zamowienie");
                });

            modelBuilder.Entity("TokyoGarden.Model.Zamowienia", b =>
                {
                    b.HasOne("TokyoGarden.Model.Uzytkownicy", "uzytkownik")
                        .WithMany("zamowienia")
                        .HasForeignKey("uzytkownikid");

                    b.Navigation("uzytkownik");
                });

            modelBuilder.Entity("TokyoGarden.Model.Kategorie_Menu", b =>
                {
                    b.Navigation("pozycje_menu");
                });

            modelBuilder.Entity("TokyoGarden.Model.Uzytkownicy", b =>
                {
                    b.Navigation("zamowienia");
                });

            modelBuilder.Entity("TokyoGarden.Model.Zamowienia", b =>
                {
                    b.Navigation("pozycje_zamowienia");
                });
#pragma warning restore 612, 618
        }
    }
}
